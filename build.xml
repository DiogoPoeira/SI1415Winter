<project name="SI" default="test" basedir=".">

  <description> 
    Ant build file for SI
  </description>

  <!--++++++++++ Properties ++++++++++-->
  <property name="src-main" location="src/main/java"/>
  <property name="src-test" location="src/test/java"/>
  <property name="src-apps" location="src/main/apps"/>
  <property name="target"  location="target"/>
  <property name="target-classes"  location="target/classes"/>
  <property name="target-test-classes"  location="target/test-classes"/>
  <property name="target-test-reports"	location="target/test-reports"/>

  <path id="main.extlibs.class.path">
    <fileset dir="vendor/main/lib">
      <include name="**/*.jar" />
    </fileset>
  </path>
  
  <path id="test.extlibs.class.path">
    <path refid="main.extlibs.class.path" />
    <fileset dir="vendor/test/lib">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <!-- ++++++++++ Targets ++++++++++ -->

  <target name="init" description ="Creates the target folders">
    <mkdir dir="${target-classes}"/>
    <mkdir dir="${target-test-classes}"/>
    <mkdir dir="${target-test-reports}"/>
  </target>


  <target name="clean" description="Removes the target folders" >
    <delete includeEmptyDirs="true" failonerror="false" verbose="true" >
  	    <fileset dir="${target}" defaultexcludes="false"/>
    </delete>
  </target>


  <target name="compile-main" depends="init"
        description="Compiles the main source" >

    <javac debug="true"
           srcdir="${src-main}"
           destdir="${target-classes}"
           includeantruntime="false">
      <classpath>
        <path refid="main.extlibs.class.path" />
      </classpath>
    </javac>
    <copy todir="${target-classes}">
      <fileset dir="${src-main}"
	  includes="res/*">
        <include name="**/*.properties"/>
      </fileset>
    </copy>
  </target>


  <target name="compile-test" depends="compile-main"
        description="Compiles the test source" >
    <javac  debug="true"
            debugLevel="source"
            srcdir="${src-test}"
            destdir="${target-test-classes}"
            includeantruntime="true">
      <classpath>
        <pathelement location="${target-classes}"/>
        <path refid="test.extlibs.class.path" />
      </classpath>
    </javac>
	   <copy todir="${target-classes}">
      <fileset dir="${src-test}"
	  includes="res/*">
        <include name="**/*.properties"/>
      </fileset>
    </copy>
  </target>

  <target name="test" depends="compile-test" description="Runs the tests">
    <junit printsummary="on" haltonfailure="true" showoutput="true" >
      <classpath>
        <pathelement location="${target-classes}"/>
        <pathelement location="${target-test-classes}"/>
        <path refid="test.extlibs.class.path" />
      </classpath>

      <formatter type="plain" usefile="false"/>

      <batchtest fork="yes" todir="${target-test-reports}" >
        <fileset dir="${src-test}">
          <include name="**/*Test*.java"/>          
        </fileset>        
        <formatter type="plain"/>
      </batchtest>
    </junit>
  </target>
  
  <target name="package" depends="test" description="Packages the main classes into a jar" >
    <jar 	jarfile="${target}/1314-2-SI-LI51D-G07.jar" 
			basedir="${target-classes}">
	 <restrict>
        <not>
            <or>
                <name name="META-INF/*.RSA"/>
                <name name="META-INF/*.SF"/>
                <name name="META-INF/*.DSA"/>
            </or>
        </not>
		<archives>
            <zips>
                <fileset dir="vendor/main/lib" includes="**/*.jar"/>
				
            </zips>
		</archives>
	</restrict>
		<manifest>
      <attribute name="Main-Class" value="si.app.App"/>
	   <attribute name="Class-Path" value="../vendor/main/lib/sqljdbc4.jar ../vendor/main/lib/commons-lang-2.6.jar ../vendor/main/lib/joda-time-1.6.2.jar"/>
     </manifest>
	</jar>
  </target>

</project>
